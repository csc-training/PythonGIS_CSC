check:
    * https://www.earthdatascience.org/courses/use-data-open-source-python/intro-raster-data-python/
    * https://www.earthdatascience.org/courses/use-data-open-source-python/multispectral-remote-sensing/
    * https://carpentries-incubator.github.io/geospatial-python/05-raster-structure/
    * https://geohackweek.github.io/raster/04-workingwithrasters/
    * https://kodu.ut.ee/~kmoch/geopython2019/L4/raster.html
    * https://geoscripting-wur.github.io/PythonRaster/
    * some xarray: https://developer.ibm.com/learningpaths/data-analysis-using-python/working-with-geospatial-raster-data-in-python/
    * fill no data: https://gis.stackexchange.com/questions/361575/interpolate-nodata-in-rasters-using-python
    * sample raster values at specific coordinates: https://hackernoon.com/sampling-raster-values-at-specific-coordinates-with-python
    * Virtual Rasters: https://docs.csc.fi/support/tutorials/gis/virtual-rasters/
        
        
add mistakes!

Read metadata from Allas directly? 
-> Reading raster file
r = rasterio.open('/vsis3/name_of_your_Allas_bucket/name_of_your_input_raster_file.tif')
input_data = r.read()

Check here for getting data from Paituli: https://github.com/Automating-GIS-processes/CSC18/blob/master/source/codes/L6_CSC/download_files.py eg for mosaic exercise

Download data from somewhere with Python.
https://github.com/CSCfi/avaa-paituli/blob/master/data_management/automatic_updates/paituli/sync_from_mtp.py
https://github.com/CSCfi/avaa-paituli/blob/master/data_management/automatic_updates/puhti/syke_download_old.py
The first may-be has not so nice wget as subprocess, there was some reason to do it that way, I think retrying.
The second is more Python way.
For course the second is likely better.
WFS download: https://github.com/CSCfi/avaa-paituli/blob/master/data_management/format_change/TK_WFS_to_shape.py
For WMS/WCS I do not think I have anything saved.





## Automatized data download


For this lesson, we need to download data from couple of different places. For this purpose I will show
how to download data automatically using Python programming which might be quite useful thing to know.

The data files that we are using in this tutorial will be obtained from [PaITuli spatial data service ](https://avaa.tdata.fi/web/paituli/latauspalvelu).
We will be using Landsat 8 image from Helsinki area produced by NASA, USGS & Latuviitta which I have already clipped to reduce the size of the file (raster files are often fairly large in size),
and a 2mx2m Digital Elevation Model (DEM) produced by National Land Survey of Finland.

You can download those files into your computer automatically with following script in which we will be using [urllib module](https://docs.python.org/3/library/urllib.html) to download the data with Python:

import os
import urllib

def get_filename(url):
    """
    Parses filename from given url
    """
    if url.find('/'):
        return url.rsplit('/', 1)[1]

# Filepaths
outdir = r"data"

# File locations
url_list = ["https://github.com/Automating-GIS-processes/CSC18/raw/master/data/Helsinki_masked_p188r018_7t20020529_z34__LV-FIN.tif"]

# Create folder if it does no exist
if not os.path.exists(outdir):
    os.makedirs(outdir)

# Download files
for url in url_list:
    # Parse filename
    fname = get_filename(url)
    outfp = os.path.join(outdir, fname)
    # Download the file if it does not exist already
    if not os.path.exists(outfp):
        print("Downloading", fname)
        r = urllib.request.urlretrieve(url, outfp)